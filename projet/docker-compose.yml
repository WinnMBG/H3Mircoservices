version: '3.8'
services:
  # database:
  #   image: mongo:latest
  #   restart: always
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: winn
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./backend/app/data:/data/db
  #   networks:
  #     - moviesnet
  
  # app_backend:
  #   build: ./backend/app
  #   restart: always
  #   environment:
  #     - 'PORT=3001'
  #   ports:
  #     - 3001:3001
  #   depends_on:
  #     - database
  #   networks:
  #     - moviesnet
  #   healthcheck:
  #     test: curl --fail http://localhost:3001/films || exit 1 curl http://0.0.0.0:9200/_cat/indices?v

  #     interval: 60s
  #     retries: 5
  #     start_period: 20s
  #     timeout: 10s

  # app_frontend:
  #   build: ./frontend/
  #   restart: always
  #   environment:
  #     - 'REACT_APP_API_URL=http://localhost:3001/'
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - app_backend
  #   networks:
  #     - moviesnet
  #   healthcheck:
  #     test: curl --fail http://localhost:3000 || exit 1
  #     interval: 60s
  #     retries: 5
  #     start_period: 20s
  #     timeout: 10s

  # prometheus:
  #   image: prom/prometheus:v2.21.0
  #   ports:
  #     - 9000:9090
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #     - prometheus-data:/prometheus
  #   command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  
  # reverse_proxy_client:
  #   image: nginx
  #   container_name: nginx_client
  #   ports:
  #     - '800:800'
  #     - '444:444'
  #   volumes:
  #     - ./proxy/nginx.conf:/etc/nginx/nginx.conf
  #     - ./proxy/certificates/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - app_frontend
  #   networks:
  #     - h3micronetwork
  #   restart: on-failure:3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch_container
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - moviesnet
    healthcheck:
      test: curl --fail http://elasticsearch_container:9200/ || exit 1 
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    restart: on-failure
   
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.3
    container_name: logstash
    ports:
      - '9600:9600'
    volumes:
      - ./datatest/:/usr/share/logstash/external-data/
      - ./logstash/pipeline/:/usr/share/logstash/pipeline
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml
    # command: logstash -f /usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_SETTINGS_DIR: /usr/share/logstash/config
      xpack.monitoring.enabled: 'true'
    networks:
      - moviesnet
    restart: on-failure
    healthcheck:
      test: curl --fail http://elasticsearch_container:9200/_cat/indices?v || exit 1 
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.11.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch_container:9200
      - xpack.fleet.agents.enabled=false
    ports:
      - '5601:5601'
    networks:
      - moviesnet
    healthcheck:
      test: curl --fail http://kibana:5601/ || exit 1 
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      - elasticsearch
  
  filebeat:
  image: docker.elastic.co/beats/filebeat:8.11.3
  container_name: filebeat
  volumes:
    - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    - ./logs:/logs
  networks:
    - moviesnet
  depends_on:
    - logstash
    - elasticsearch
  
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.11.3
    container_name: metricbeat
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    command: ["-e", "--strict.perms=false"]
    depends_on:
      - elasticsearch    
      - kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch_container:9200
      - KIBANA_HOST=http://kibana:5601
      - SETUP_KIBANA_HOST=kibana:5601
    networks:
      - moviesnet
          
networks:
  moviesnet:
    driver: bridge

# volumes:
  # mongo-data:
  # prometheus-data:
  # grafana-data:
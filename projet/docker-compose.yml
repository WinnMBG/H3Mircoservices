version: '3.8'
services:
  database:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: winn
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - ./backend/app/data:/data/db
    networks:
      - moviesnet
  
  app_backend:
    build: ./backend/app
    restart: always
    environment:
      - 'PORT=3001'
    ports:
      - 3001:3001
    depends_on:
      - database
    networks:
      - moviesnet
    healthcheck:
      test: curl --fail http://localhost:3001/films || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  app_frontend:
    build: ./frontend/
    restart: always
    environment:
      - 'REACT_APP_API_URL=http://localhost:3001/'
    ports:
      - 3000:3000
    depends_on:
      - app_backend
    networks:
      - moviesnet
    healthcheck:
      test: curl --fail http://localhost:3000 || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  
  # reverse_proxy_client:
  #   image: nginx
  #   container_name: nginx_client
  #   ports:
  #     - '800:800'
  #     - '444:444'
  #   volumes:
  #     - ./proxy/nginx.conf:/etc/nginx/nginx.conf
  #     - ./proxy/certificates/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - app_frontend
  #   networks:
  #     - h3micronetwork
  #   restart: on-failure:3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch_container
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - '9200:9200'
    networks:
      - moviesnet
    restart: on-failure
   
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.3
    container_name: h3micro_logstash
    ports:
      - '9600:9600'
      - '8089:8089'
      - '5044:5044'
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      xpack.monitoring.enabled: 'true'
    networks:
      - h3micronetwork
    restart: on-failure
    depends_on:
      - elasticsearch_container

    # kibana:
    #     image: kibana:8.11.3
    #     container_name: kibana
    #     # volumes:
    #     #     - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    #     environment:
    #         - ELASTICSEARCH_HOSTS=http://h3micro_elasticsearch:9200
    #     ports:
    #         - '5601:5601'
    #     networks:
    #         - h3micronetwork
    #     depends_on:
    #         - elasticsearch_container
networks:
  moviesnet:
    driver: bridge

volumes:
  mongo-data:
  prometheus-data:
  grafana-data: